#!/usr/bin/env python
import os
import sys
import time
import json
import base64
import httplib

def http_client(method, resource, args):
    conn.request(method, resource, json.dumps(args))
    response = conn.getresponse()

    try:
        body = json.loads(response.read())
    except ValueError:
        body = None

    print((resource, response.status, response.reason, body))
    return response.status, response.reason, body

app  = json.load(open('{0}.key'.format(os.getuid())))
conn = httplib.HTTPConnection(app['api_host'] + ':' + str(app['api_port']))

sys.path.append(app['path'])
import worker

while True:
    status, reason, msg = http_client('POST', 'lockmessage', app)
    if (200 != status) or ('NOT_FOUND' == msg):
        break

    event = dict(code=msg['code'], data=msg['data'])

    result = worker.worker(base64.b64decode(msg['input']),
                           base64.b64decode(msg['continuation']),
                           event)

    if result is None:
        result = dict(status='worker crashed')

    if 'status' in result:
        result['status'] = base64.b64encode(result['status'])

    if 'state' in result:
        result['continuation'] = base64.b64encode(result['state'])

    result['msgid']      = msg['msgid']
    result['workername'] = msg['workername']

    http_client('POST', 'commit', dict(commit=result,
                                       appname=app['appname'],
                                       authkey=app['authkey']))
