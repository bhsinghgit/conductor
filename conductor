#!/usr/bin/env python
import json
import base64
import httplib
import optparse

op = optparse.OptionParser()
op.add_option('--cmd',         dest='cmd')
op.add_option('--type',        dest='type')
op.add_option('--path',        dest='path')
op.add_option('--workername',  dest='workername')
op.add_option('--pool',        dest='pool')
op.add_option('--ip',          dest='ip')
op.add_option('--count',       dest='count')

op.add_option('--input',       dest='input')
op.add_option('--code',        dest='code')
op.add_option('--data',        dest='data')
op.add_option('--delay',       dest='delay')

(opt, args) = op.parse_args()

args = json.loads(open('conductor.json').read())

if 'add_app' == opt.cmd:
    method   = 'POST'
    resource = 'applications'
    args['app'] = dict(type=opt.type, path=opt.path)
elif 'add_ip' == opt.cmd:
    method   = 'POST'
    resource = 'hosts'
    args['host'] = dict(ip=opt.ip, count=opt.count)
elif 'add_pool' == opt.cmd:
    method   = 'POST'
    resource = 'pools'
    args['pool'] = dict(pool=opt.pool, ip=opt.ip)
elif 'add_worker' == opt.cmd:
    method   = 'POST'
    resource = 'workers'
    args['worker'] = dict(input=base64.b64encode(open(opt.input).read()))
    if opt.workername:
        args['worker']['workername'] = opt.workername
elif 'send_msg' == opt.cmd:
    method   = 'POST'
    resource = 'messages'
    args['msg'] = dict(workername=opt.workername, code=opt.code)
    if opt.pool:
        args['msg']['pool'] = opt.pool
    if opt.data:
        args['msg']['data'] = base64.b64encode(open(opt.data).read())
    if opt.delay:
        args['msg']['delay'] = int(opt.delay)
else:
    print('invalid command')
    exit(1)

conn  = httplib.HTTPConnection(args['api_host'], args['api_port'])
conn.request(method, resource, json.dumps(args))
response = conn.getresponse()

print('{0} {1}'.format(response.status, response.reason))
print(json.dumps(json.loads(response.read()), indent=4))
