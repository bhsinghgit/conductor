#!/usr/bin/env python
import sys
import json
import uuid
import time
import httplib
import optparse

conn = httplib.HTTPConnection(sys.argv[1], sys.argv[2])

def http_client(method, resource, args=None):
    header = {
        'X-SHEPHERD-APPNAME' : 'testapp',
        'X-SHEPHERD-AUTHKEY' : 'testkey'
    }

    conn.request(method, resource, json.dumps(args), header)
    response = conn.getresponse()

    if 200 == response.status:
        return json.loads(response.read())
    else:
        print(json.dumps(args, indent=4, sort_keys=True))
        print('{0} {1} {2} {3}'.format(
            method, resource, response.status, response.reason))
        print(response.read())
        exit(1)

workercount = int(sys.argv[3])

guid = str(uuid.uuid4())
http_client('PUT', '/workers',
            dict(data=dict(expected=workercount, guid=guid),
                 workflow='sheepdog',
                 workername='sheepdog'))

for i in range(workercount):
    http_client('PUT', '/workers',
                dict(data=dict(worker=i, count=workercount, guid=guid),
                     workflow='sheep',
                     workername='sheep-' + str(i)))

while True:
    result = http_client('GET', '/workers/sheepdog')
    if (result['status'] is None) or ('NOT_FOUND' == result['status']):
        time.sleep(1)
        continue

    print(result['status'])

    if 'SLEEPING_FOR_SIGNAL_5' == result['status']:
        http_client('POST', '/messages/testapp/sheepdog', dict(code='report'))

    if result['status'] in ['PASS', 'FAIL']:
        break
    time.sleep(1)
