#!/usr/bin/env python
import sys
import json
import uuid
import time
import httplib
import optparse

def http_client(method, resource, args=None):
    header = {
        'X-SHEPHERD-APPID': appid,
        'X-SHEPHERD-APPKEY': appkey
    }

    try:
        conn = httplib.HTTPConnection(sys.argv[1], sys.argv[2])
        conn.request(method, resource, json.dumps(args), header)

        response = conn.getresponse()
        return response.status, response.reason, json.loads(response.read())
    except Exception as e:
        return 500, 'EXCEPTION', str(e)

appid = sys.argv[3]
appkey = sys.argv[4]
workercount = int(sys.argv[5])

guid = str(uuid.uuid4())

status = 500
while status != 200:
    status, reason, msg = http_client('POST',
                                      '/workers/{0}'.format(appid),
                                      dict(data=dict(expected=workercount,
                                                     guid=guid),
                                           workflow='sheepdog'))
    leader = msg['workerid']

for i in range(workercount):
    status = 500
    while status != 200:
        status, reason, msg = http_client('POST',
                                          '/workers/{0}'.format(appid),
                                          dict(data=dict(worker=i,
                                                         leader=leader,
                                                         count=workercount,
                                                         guid=guid),
                                               workflow='sheep'))

leader = str(leader)
while True:
    time.sleep(5)
    status, reason, result = http_client('GET',
                                         '/workers/{0}/{1}'.format(appid,
                                                                   leader))

    if status != 200:
        continue

    print('{0} : {1}'.format(leader, result[leader]['status']))

    if 'SLEEPING_FOR_SIGNAL_5' == result[leader]['status']:
        http_client('POST',
                    '/messages/{0}'.format(leader),
                    dict(code='report'))

    if result[leader]['status'] in ['PASS', 'FAIL']:
        break
